@tailwind base;
@tailwind components;
@tailwind utilities;

/* 
NOTE:
> we are going to use hex values, because they are very easily available in figma and coolors. all i got to do is copy and paste one time. but then we can't use the opacity-modifier syntax in tailwindcss. but thats not our problem because the colors in figma comes predefined with all the opacity required. so we dont need it anyways. 

we need to look how shadcn works with customized HEX values.
*/

/* 
SCOPE: 
> our plugin should work on :root and .dark class only. it ain't got to be generic btw. rn its all about solving our problem first. later on, if we got motion, we can always create another project to maintain side by side. also i dont want to make this a monorepo cause i dont know the way. **SKILL ISSUE**.
*/

/* 
SOLN:
> postcss-color-hexa may helps us. but the problem is we still have to edit some of it.
> postcss-rgb-plz is looking very promising.

*/
@layer base {
    :root {
        --background: hsl(57, 100%, 49%);
        --foreground: 0 0% 3.9%;
        --card: 0 0% 100%;
        --card-foreground: 0 0% 3.9%;
        --popover: 0 0% 100%;
        --popover-foreground: 0 0% 3.9%;
        --primary: 0 0% 9%;
        --primary-foreground: 0 0% 98%;
        --secondary: 0 0% 96.1%;
        --secondary-foreground: 0 0% 9%;
        --muted: 0 0% 96.1%;
        --muted-foreground: 0 0% 45.1%;
        --accent: 0 0% 96.1%;
        --accent-foreground: 0 0% 9%;
        --destructive: 0 84.2% 60.2%;
        --destructive-foreground: 0 0% 98%;
        --border: 0 0% 89.8%;
        --input: 0 0% 89.8%;
        --ring: 0 0% 3.9%;
        --chart-1: 12 76% 61%;
        --chart-2: 173 58% 39%;
        --chart-3: 197 37% 24%;
        --chart-4: 43 74% 66%;
        --chart-5: 27 87% 67%;
        --radius: 0.5rem;
    }

    .dark {
        --background: 0 0% 3.9%;
        --foreground: 0 0% 98%;
        --card: 0 0% 3.9%;
        --card-foreground: 0 0% 98%;
        --popover: 0 0% 3.9%;
        --popover-foreground: 0 0% 98%;
        --primary: 0 0% 98%;
        --primary-foreground: 0 0% 9%;
        --secondary: 0 0% 14.9%;
        --secondary-foreground: 0 0% 98%;
        --muted: 0 0% 14.9%;
        --muted-foreground: 0 0% 63.9%;
        --accent: 0 0% 14.9%;
        --accent-foreground: 0 0% 98%;
        --destructive: 0 62.8% 30.6%;
        --destructive-foreground: 0 0% 98%;
        --border: 0 0% 14.9%;
        --input: 0 0% 14.9%;
        --ring: 0 0% 83.1%;
        --chart-1: 220 70% 50%;
        --chart-2: 160 60% 45%;
        --chart-3: 30 80% 55%;
        --chart-4: 280 65% 60%;
        --chart-5: 340 75% 55%;
    }
}

@layer base {
    * {
        @apply border-border;
    }
    body {
        @apply bg-background text-foreground;
    }
}

/* always put custom classes in utilities layer. they are gonna override the base layer styles. this also makes sense because you wont be writing all of the from scratch by yourself. you will just be wanting to tweak some colors, fonts, probably some radius and sizes.*/
@layer utilities {
    body {
        @apply bg-background/50;
    }
}
